version: "3.9"

services:
  mysql_records:
    image: mysql:8
    container_name: mysql_records
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: records
    ports:
      - "3307:3306"
    volumes:
      - ./init/records.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elasticnet

  mysql_streams:
    image: mysql:8
    container_name: mysql_streams
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: streams
    ports:
      - "3308:3306"
    volumes:
      - ./init/streams.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elasticnet
      

  postgres_dwh:
    image: postgres:15
    container_name: postgres_dwh
    environment:
      POSTGRES_DB: dwh
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init/init-dwh.sql:/docker-entrypoint-initdb.d/init.sql    - ./init/init-dwh.sql:/docker-entrypoint-initdb.d/init.sql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - elasticnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elasticnet
    
  init-es:
    image: python:3.13-slim
    container_name: init-es
    depends_on:
      elasticsearch:
        condition: service_healthy
    working_dir: /app
    volumes:
      - .:/app
    command: >
      bash -c "pip install elasticsearch==8.13.0 && python es/init_es.py"
    restart: on-failure
    networks:
      - elasticnet

  airflow:
    image: apache/airflow:2.9.0
    container_name: airflow
    restart: always
    environment:
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./ingestion_init:/opt/airflow/ingestion_init
      - ./es:/opt/airflow/es 
      - ./requirements.txt:/requirements.txt     
    ports:
      - "8080:8080"
    command: bash -c "pip install --no-cache-dir -r /requirements.txt &&
           airflow standalone"
    networks:
      - elasticnet
    #command: bash -c "pip install --no-cache-dir -r /requirements.txt && airflow db init && airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com && airflow webserver"


  # metabase:
  #   image: metabase/metabase:latest
  #   container_name: metabase
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - mysql_dwh
  #   volumes:
  #     - ./metabase-data:/metabase-data
  #   environment:
  #     MB_DB_FILE: /metabase-data/metabase.db

  # airflow-webserver:
  #   image: apache/airflow:2.9.0
  #   container_name: airflow_webserver
  #   restart: always
  #   depends_on:
  #     - airflow-scheduler
  #   environment:
  #     - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
  #     - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
  #     - AIRFLOW__CORE__LOAD_EXAMPLES=False
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./airflow/dags:/opt/airflow/dags
  #   command: webserver

  # airflow-scheduler:
  #   image: apache/airflow:2.9.0
  #   container_name: airflow_scheduler
  #   restart: always
  #   volumes:
  #     - ./airflow/dags:/opt/airflow/dags
  #   command: scheduler

  # python_ingestion:
  #   build:
  #     context: ./ingestion
  #     dockerfile: Dockerfile
  #   container_name: python_ingestion
  #   depends_on:
  #     - mysql_students
  #     - mysql_jobs
  #     - mysql_dwh
  #     - elasticsearch
  #   volumes:
  #     - ./ingestion:/app
  #   environment:
  #     - MYSQL_HOST_STUDENTS=mysql_students
  #     - MYSQL_HOST_JOBS=mysql_jobs
  #     - MYSQL_HOST_DWH=mysql_dwh
  #     - MYSQL_USER=root
  #     - MYSQL_PASSWORD=root
  #     - ES_HOST=elasticsearch




networks:
  elasticnet:
    driver: bridge